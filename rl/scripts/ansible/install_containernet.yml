- 
  name: Install Containernet
  hosts: rl_base_node
  vars:
    git_repository: "https://github.com/rl-cs-pub-ro/containernet.git"
    git_branch: "rl2022"
    packages: [
        'git', 'aptitude', 'apt-transport-https', 'ca-certificates',
        'curl', 'python3-setuptools', 'python3-dev', 'build-essential',
        'python3-pip', 'iptables', 'software-properties-common'
      ]
    containernet_dest: "/opt/containernet"

  tasks:
    - package:
        name: "{{ item }}"
        state: present 
      loop: "{{ packages }}"
    
    - name: Clone Containernet Public repository
      git:
        repo: "{{ git_repository }}"
        version: "{{ git_branch }}"
        dest: "{{ containernet_dest }}"

    - name: find pip executable
      shell: "which pip3"
      register: pip_path     
  
    - name: install python-backports.ssl-match-hostname
      pip: name=backports.ssl-match-hostname executable={{pip_path.stdout}}
  
    - name: install pytest
      pip: name=pytest executable={{pip_path.stdout}}
  
    - name: install docker py
      pip: name=docker executable={{pip_path.stdout}}
  
    - name: install python-iptables
      pip: name=python-iptables state=latest executable={{pip_path.stdout}}
  
    - name: install pexpect
      pip: name=pexpect executable={{pip_path.stdout}}
  
    - name: python-iptables workaround
      ansible.builtin.lineinfile:
        path: /etc/environment
        regexp: '^XTABLES_LIBDIR '
        insertafter: EOF
        line: XTABLES_LIBDIR=/usr/lib/x86_64-linux-gnu/xtables/

    - block:
        - name: build and install Containernet (using Mininet installer)
          shell: |
              [ -d "/opt/openflow" ] || PYTHON=python3 XTABLES_LIBDIR=/usr/lib/x86_64-linux-gnu/xtables/ util/install.sh -fnv
          args:
            chdir: /opt/containernet
          register: ps
          no_log: false
      rescue:
        - name: show error
          debug:
            msg: "{{ ps.stdout }} {{ ps.stderr }}"
        - name: fail the playbook
          fail:
            msg: Error on command. See debug of stderr above

    - name: install Containernet Python egg etc.
      shell: make -f Makefile develop
      args:
        chdir: "{{ containernet_dest }}"
  
    - name: download 'ubuntu' docker image for Containernet example
      shell: docker pull ubuntu:trusty
      tags:
         - notindocker
         - nopull
  
